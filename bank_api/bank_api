NAME
  bank_api - provide method to communicate with a bank server

SYNOPSIS
  local bank = require("bank_api")

DESCIPTION
  This API allow easy communication with the bank server

  Data structure
    cbData : see man libCB
    rawCBdata : see man libCB

  Method list

    getCredit(cbData):int,int
      Get the current solde of the account

    makeTransaction(uuid_cible,cbData,amount):int
      Transfer a certain amount form the account provided by the credit card data to the account whose number has been given as the first parameter.

    createAccount():int,sting
      Ask for a new account. You need a authorized client.
      Return the account number (uuid) as a string
      
    requestNewCBdata(accountUUID,cbUUID):int:string:rawCBdata
      Ask for the raw data to write a new credit card. You need a authorized client.

    editAccount(cbData,amount):int
      Add amount to the account. If amount is < 0 It will be removed form the account. You need a authorized client.
      A account cant have a negative solde.

    getInfo(cbData,tag):int,string
      Request a account info to the server. If the info is private you will need a authorized client.

    setInfo(cbData,tag,value,private):int,string
      Set a account info. You need a authorized client.
      If the "private" parameter is true, reading the value will require a authorized client.

    setModemTimeout(t)

  Returned values
    The first returned value is a status code
      0 = OK
      1 = NO_ACCOUNT
      2 = ERROR_ACCOUNT
      3 = ERROR_CB
      4 = ERROR_AMOUNT
      -1 = timeout
      -2 = wrong message
    The second returned value is optional

CONFIGURATION

FILES
  /usr/lib/bank_api.lua
    the library
  /etc/bank/api/conf.conf
    the config file location

SEE ALSO
  libCB

AUTHOR
  AR2000
